swagger: '2.0'
info:
  title: Iznik API
  description: "This is an explorable definition of the Iznik REST API.  \n\nYou should put the result of your login (via a POST to session) into the api_key field above for future calls.  In web browsers this is handled by cookies, but Swagger doesn't support those.\n\nNote that the results of each call are not fully defined in here; we do a minimum required to allow Swagger to work."
  version: "1.0.0"
host: iznik.modtools.org
schemes:
  - https
  - http
basePath: /api
produces:
  - application/json
paths:
  /dashboard:
    get:
      summary: Dashboard Get
      tags: [Dashboard]
      description: |
        Get dashboard information
      parameters:
      - name: systemwide
        in: query
        description: Get system wide dashboard information
        type: boolean
      - name: allgroups
        in: query
        description: Get dashboard information for all groups for currently logged in user
        type: boolean
      - name: group
        in: query
        description: Get dashboard information for specific group
        type: number
      - name: grouptype
        in: query
        description: Which type of group to include
        type: string
        enum: ['Freegle', 'Reuse', 'Other']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /session:
    get:
      summary: Session Get
      tags: [Session]
      description: |
        Check if current user is logged in
      responses: 
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Session Login
      tags: [Session]
      description: |
        Log in as a user
      parameters:
      - name: fblogin
        in: query
        description: Log in via Facebook
        type: boolean
      - name: yahoologin
        in: query
        description: Log in via Yahoo
        type: boolean
      - name: email
        in: query
        description: For native login, email address
        type: string
      - name: password
        in: query
        description: For native login, password
        type: string
      - name: returnto
        in: query
        description: URL to return to for Login methods which respond with a redirect request
        type: string
      responses:
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    patch:
      summary: Session Modify
      tags: [Session]
      description: |
        Modify logged in user details
      parameters:
      - name: displayname
        in: body
        description: Name as displayed in public
        type: string
      - name: firstname
        in: body
        description: First name
        type: string
      - name: lastname
        in: body
        description: Last name
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Session Logout
      tags: [Session]
      description: |
        Log out current user
      responses: 
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /message/{id}:
    get:
      summary: Message Get
      tags: [Messages]
      description: |
        Retrieve message
      parameters:
      - name: id
        in: path
        description: ID of the message
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is approved
        type: string
        enum: ['approved', 'pending', 'spam']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Message Delete
      tags: [Messages]
      description: |
        Delete message
      parameters:
      - name: id
        in: path
        description: ID of the message
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is Approved
        type: string
        enum: ['Approved', 'Pending', 'Spam']
      - name: reason
        in: query
        description: Why the message is being delete
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Message Approve/Reject
      tags: [Messages]
      description: |
        Approve or reject a message
      parameters:
      - name: id
        in: body
        description: ID of the message
        type: number
        required: true
      - name: groupid
        in: query
        description: ID of the group we're adding to
        type: number
      - name: action
        in: query
        description: Whether to approve or reject
        type: string
        enum: ['Approve', 'Reject', 'Delete']
        required: true
      - name: subject
        in: body
        description: Subject line for any rejection email
        type: string
      - name: body
        in: body
        description: Body for any rejection email
        type: string
      - name: bcc
        in: body
        description: Any email address to BCC message to
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    put:
      summary: Message Set
      tags: [Messages]
      description: |
        Set attributes of a message
      parameters:
      - name: id
        in: path
        description: ID of the message
        type: number
      - name: subject
        in: body
        description: Any updated subject
        type: string
      - name: textbody
        in: body
        description: Any updated plain text body
        type: string
      - name: htmlbody
        in: body
        description: Any updated html body
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /messages/search/{term}:
    get:
      summary: Messages Search
      tags: [Messages]
      description: |
        Search messages
      parameters:
      - name: term
        in: path
        description: What to search for
        type: string
      - name: context
        in: query
        description: Context from previous search if any
        type: string
      - name: limit
        in: query
        description: Max number of results to return
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /messages:
    get:
      summary: Messages Get
      tags: [Messages]
      description: |
        Retrieve messages
      parameters:
      - name: groupid
        in: query
        description: Groupid to query; default is all for current user
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is Approved
        type: string
        enum: ['Approved', 'Pending', 'Spam']
      - name: start
        in: query
        description: For paging results; message ID above which to return
        type: integer
      - name: limit
        in: query
        description: For paging results; max number of messages to return
        type: integer
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    put:
      summary: Message Add
      tags: [Messages]
      description: |
        Add a full SMTP message.  This is used for synchronisation with moderator tools
      parameters:
      - name: groupid
        in: query
        description: ID of the group we're adding to
        type: number
      - name: source
        in: query
        description: Where the message has come from
        type: string
        enum: ['Yahoo Approved', 'Yahoo Pending']
      - name: from
        in: body
        description: The submitter of the message
        type: string
      - name: message
        in: body
        description: The full message source
        type: string
      - name: yahoopendingid
        in: body
        description: The pending ID on Yahoo
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Messages Correlate
      tags: [Messages]
      description: |
        Correlate messages on server to determine any missing
      parameters:
      - name: groupid
        in: query
        description: Groupid to query; default is all for current user
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is Approved
        type: string
        enum: ['Approved', 'Pending', 'Spam']
      - name: messages
        in: body
        description: Array of messages
        required: true,
        schema:
          $ref: '#/definitions/correlate'
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /group:
    get:
      summary: Group Get
      tags: [Group]
      description:
        Retrieve group details
      parameters:
      - name: id
        in: query
        description: Groupid or nameshort to query.
        type: string
      - name: members
        in: body
        description: Whether to return membership list; default is false.
        type: boolean
      - name: context
        in: body
        description: Any context from previous request
        type: string
      - name: search
        in: body
        description: Any string to search within members
        type: string
      - name: limit
        in: body
        description: Max number of members to return, defaults to 10
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    patch:
      summary: Update a group settings
      tags: [Group]
      description:
        Doesn't work in Swagger.
      parameters:
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Perform group actions
      tags: [Group]
      description:
        Various odd things we might want to do on a group
      parameters:
      - name: groupid
        in: query
        description: Groupid to update
        required: true,
        type: number
      - name: action
        in: query
        description: What action to perform
        type: string
        enum: ['ConfirmKey']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /supporters:
    get:
      summary: Supporters Get
      tags: [Supporters]
      description: |
        Retrieve list of supporters of this project
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /plugin:
    get:
      summary: Plugin Get
      tags: [Plugin]
      description: |
        Get list of work for currently logged in user
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /plugin/{id}:
    delete:
      summary: Plugin Delete
      tags: [Plugin]
      description: |
        Delete an item of work
      parameters:
      - name: id
        in: path
        description: ID of plugin work item
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /user/{id}:
    get:
      summary: User Get
      tags: [Users]
      description: |
        Retrieve user
      parameters:
      - name: id
        in: path
        description: ID of the user
        type: number
      - name: logs
        in: query
        description: Whether to get user's logs; defaults FALSE
        type: boolean
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: User Delete
      tags: [Users]
      description: |
        Delete user from system and all groups
      parameters:
      - name: id
        in: path
        description: ID of the user
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: User Modify
      tags: [Users]
      description: |
        Modify a user
      parameters:
      - name: id
        in: path
        description: Unique ID of the user.  This or yahooid or email must be present.
        type: number
        required: false
      - name: yahooid
        in: body
        description: Unique ID of the user on Yahoo.  This or id or email must be present.
        type: number
        required: true
      - name: email
        in: query
        description: Unique Email of the user.  This or yahooid or or must be present
        type: string
      - name: groupid
        in: query
        description: ID of any specific group we're affecting the user's settings on
        type: number
      - name: yahooDeliveryType
        in: query
        description: Any change to Yahoo Delivery Type
        type: string
        enum: ['DIGEST', 'NONE', 'SINGLE', 'ANNOUNCEMENT']
      - name: yahooPostingStatus
        in: query
        description: Any change to Yahoo Posting Status
        type: string
        enum: ['MODERATED', 'DEFAULT', 'PROHIBITED', 'UNMODERATED']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /comment/{id}:
    get:
      summary: Get a Comment
      tags: [Comments]
      description:
        Retrieve comment on user
      parameters:
      - name: id
        in: path
        required: true
        description: Comment id to query.
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    put:
      summary: Update a comment
      tags: [Comments]
      description:
        Update a comment
      parameters:
      - name: id
        in: path
        required: true
        description: comment id to update.
        type: string
      - name: user1
        in: body
        description: Text comment
        type: string
      - name: user2
        in: body
        description: Text comment
        type: string
      - name: user2
        in: body
        description: Text comment
        type: string
      - name: user3
        in: body
        description: Text comment
        type: string
      - name: user4
        in: body
        description: Text comment
        type: string
      - name: user5
        in: body
        description: Text comment
        type: string
      - name: user6
        in: body
        description: Text comment
        type: string
      - name: user7
        in: body
        description: Text comment
        type: string
      - name: user8
        in: body
        description: Text comment
        type: string
      - name: user9
        in: body
        description: Text comment
        type: string
      - name: user10
        in: body
        description: Text comment
        type: string
      - name: user11
        in: body
        description: Text comment
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Delete a comment
      tags: [Comments]
      description:
        Delete a comment
      parameters:
      - name: id
        in: path
        required: true
        description: Comment
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /comment:
    post:
      summary: Create a comment
      tags: [Comments]
      description:
        Create a comment
      parameters:
      - name: userid
        in: path
        description: User the comment is about.
        type: string
      - name: groupid
        in: path
        description: Group the comment relates to.
        type: string
      - name: user1
        in: body
        description: Text comment
        type: string
      - name: user2
        in: body
        description: Text comment
        type: string
      - name: user2
        in: body
        description: Text comment
        type: string
      - name: user3
        in: body
        description: Text comment
        type: string
      - name: user4
        in: body
        description: Text comment
        type: string
      - name: user5
        in: body
        description: Text comment
        type: string
      - name: user6
        in: body
        description: Text comment
        type: string
      - name: user7
        in: body
        description: Text comment
        type: string
      - name: user8
        in: body
        description: Text comment
        type: string
      - name: user9
        in: body
        description: Text comment
        type: string
      - name: user10
        in: body
        description: Text comment
        type: string
      - name: user11
        in: body
        description: Text comment
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /locations/{id}:
    post:
      summary: Location action
      tags: [Locations]
      description: |
        Perform an action on a location
      parameters:
      - name: id
        in: path
        description: ID of the location
        type: number
        require: true
      - name: groupid
        in: body
        description: ID of the group
        type: number
        require: true
      - name: messageid
        in: body
        description: ID of the message to resuggest (optional)
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /memberships:
    get:
      summary: Get membership(s)
      tags: [Memberships]
      description: |
        Get membership details of a group or a user on that group.
      parameters:
      - name: groupid
        in: path
        description: Group ID to modify
        type: number
        required: true
      - name: userid
        in: path
        description: User ID to modify
        type: number
    put:
      summary: Membership add
      tags: [Memberships]
      description: |
        Add a user to a group.
      parameters:
      - name: groupid
        in: path
        description: Group ID
        type: number
        required: true
      - name: userid
        in: path
        description: User ID
        type: number
        required: true
      - name: role
        in: body
        description: User role
        type: string
        enum: ['Member', 'Moderator', 'Owner', 'Banned']
      - name: email
        in: body
        description: email address to use on this group; will add to this member if not already present
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    patch:
      summary: Membership change
      tags: [Memberships]
      description: |
        Change membership details for a group.
      parameters:
      - name: groupid
        in: path
        description: Group ID to modify
        type: number
        required: true
      - name: userid
        in: path
        description: User ID to modify; use this or members
        type: number
      - name: role
        in: body
        description: User role to set, if userid is set
        type: string
        enum: ['Member', 'Moderator', 'Owner']
      - name: members
        in: body
        description: Full list of members to set; use this or userid
        type: string
      - name: collection
        in: body
        description: When members is supplied, which set of members to update.
        type: string
        enum: ['Approved', 'Pending']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Membership action
      tags: [Memberships]
      description: |
        Perform an action on a membership
      parameters:
      - name: groupid
        in: path
        description: Group ID to modify
        type: number
        required: true
      - name: userid
        in: path
        description: User ID to modify
        type: number
      - name: action
        in: body
        description: What to do
        type: string
        enum: ['Reject', 'Approve', 'Hold', 'Release']
      - name: members
        in: body
        description: Full list of members to set; use this or userid
        type: string
      - name: collection
        in: body
        description: When members is supplied, which set of members to update.
        type: string
        enum: ['Approved', 'Pending']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Delete membership(s)
      tags: [Memberships]
      description: |
        Remove a user from a group.
      parameters:
      - name: groupid
        in: path
        description: Group ID to modify
        type: number
        required: true
      - name: userid
        in: path
        description: User ID to modify
        type: number
        required: true
      - name: ban
        in: path
        description: Ban as well as remove?  Defaults false.
        type: boolean
  /config:
    get:
      summary: ModConfig Get
      tags: [ModConfig]
      description:
        Retrieve config details
      parameters:
      - name: id
        in: query
        description: Configid to query.
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    patch:
      summary: Update a config settings
      tags: [ModConfig]
      description:
        Doesn't work in Swagger.
      parameters:
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Create a config
      tags: [ModConfig]
      description:
        Doesn't work in Swagger.
      parameters:
      - name: id
        in: query
        description: Any configid to copy
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /stdmsg:
    get:
      summary: Standard Message Get
      tags: [StdMessage]
      description:
        Retrieve stdmsg details
      parameters:
      - name: id
        in: path
        description: StdMessage id to query.
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    put:
      summary: Update a standard mesage settings
      tags: [StdMessage]
      description:
        Doesn't work in Swagger.
      parameters:
      - name: id
        in: path
        description: StdMessage id to update.
        type: string
      - name: configid
        in: body
        description: The owning configid
        type: number
      - name: title
        in: body
        description: The visible title
        type: string
      - name: action
        in: body
        description: What the stdmsg does
        type: string
        enum: ['Approve','Reject','Leave','Approve Member','Reject Member','Leave Member','Leave Approved Message','Delete Approved Message','Leave Approved Member','Delete Approved Member','Edit']
      - name: subjpref
        in: body
        description: What to put at the start of the subject line
        type: string
      - name: subjsuff
        in: body
        description: What to put at the end of the subject line
        type: string
      - name: body
        in: body
        description: What to put in the body
        type: string
      - name: rarelyused
        in: body
        description: Indicates whether this will be displayed prominently
        type: boolean
      - name: newdelstatus
        in: query
        description: Any change to Yahoo Delivery Type
        type: string
        enum: ['DIGEST', 'NONE', 'SINGLE', 'ANNOUNCEMENT']
      - name: newmodstatus
        in: query
        description: Any change to Yahoo Posting Status
        type: string
        enum: ['MODERATED', 'DEFAULT', 'PROHIBITED', 'UNMODERATED']
      - name: edittext
        in: query
        description: Any change to Yahoo Posting Status
        type: string
        enum: ['Unchanged', 'CorrectCase']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    patch:
      summary: Update a standard mesage settings
      tags: [StdMessage]
      description:
        Update a standard message
      parameters:
      - name: id
        in: path
        description: StdMessage id to update.
        type: string
      - name: configid
        in: body
        description: The owning configid
        type: number
      - name: title
        in: body
        description: The visible title
        type: string
      - name: action
        in: body
        description: What the stdmsg does
        type: string
        enum: ['Approve','Reject','Leave','Approve Member','Reject Member','Leave Member','Leave Approved Message','Delete Approved Message','Leave Approved Member','Delete Approved Member','Edit']
      - name: subjpref
        in: body
        description: What to put at the start of the subject line
        type: string
      - name: subjsuff
        in: body
        description: What to put at the end of the subject line
        type: string
      - name: body
        in: body
        description: What to put in the body
        type: string
      - name: rarelyused
        in: body
        description: Indicates whether this will be displayed prominently
        type: boolean
      - name: newdelstatus
        in: query
        description: Any change to Yahoo Delivery Type
        type: string
        enum: ['DIGEST', 'NONE', 'SINGLE', 'ANNOUNCEMENT']
      - name: newmodstatus
        in: query
        description: Any change to Yahoo Posting Status
        type: string
        enum: ['MODERATED', 'DEFAULT', 'PROHIBITED', 'UNMODERATED']
      - name: edittext
        in: query
        description: Any change to Yahoo Posting Status
        type: string
        enum: ['Unchanged', 'CorrectCase']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Create a standard message
      tags: [StdMessage]
      description:
        Create a standard message
      parameters:
      - name: title
        in: query
        description: StdMessage
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Delete a standard message
      tags: [StdMessage]
      description:
        Delete a standard message
      parameters:
      - name: id
        in: path
        description: StdMessage
        type: number
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
definitions:
  Response:
    properties: 
      ret:
        type: integer
        description: Return text
      status:
        type: string
        description: Human-readable description
      call:
        type: string
        description: The name of the call made
      duration:
        type: number
        description: Elapsed time for this call (seconds)
      cpucost:
        type: number
        description: CPU time spent processing this call (seconds)
      dbwaittime:
        type: number
        description: Elapsed time spent on DB ops for this call (seconds)
      includetime:
        type: number
        description: Elapsed time spent including scripts (seconds)
      whoamitime:
        type: number
        description: Elapsed time spent working out who this session is for (seconds)
      session:
        type: string
        description: The ID of this session; will match the Set-Cookie, but can also be passed back in using the api_key parameter
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  correlate:
    type: array,
    items:
        $ref: '#/definitions/correlatemessage'
  correlatemessage:
    properties:
        email:
          type: string
          description: 'Email of sender'
        subject:
          type: string
          description: 'Subject of message'
        date:
          type: date-time
          description: 'Post date, i.e. Date: header field'
  members:
    type: array,
    items:
        $ref: '#/definitions/member'
  member:
    properties:
        email:
          type: string
          description: 'Email of sender'
        name:
          type: string
          description: 'Name of member or Yahoo ID'
        yahooUserId:
          type: string
          description: 'Unique ID of member on Yahoo'
        yahooPostingStatus:
          type: string
          description: 'One of MODERATED, DEFAULT, PROHIBITED, UNMODERATED'
        yahooDeliveryType:
          type: string
          description: 'One of DIGEST, NONE, SINGLE, ANNOUNCEMENT'
        date:
          type: date-time
          description: 'When this member joined the group'
