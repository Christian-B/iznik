swagger: '2.0'
info:
  title: Iznik API
  description: "This is an explorable definition of the Iznik REST API.  \n\nYou should put the result of your login (via a POST to session) into the api_key field above for future calls.  In web browsers this is handled by cookies, but Swagger doesn't support those.\n\nNote that the results of each call are not fully defined in here; we do a minimum required to allow Swagger to work."
  version: "1.0.0"
host: iznik.modtools.org
schemes:
  - https
  - http
basePath: /api
produces:
  - application/json
paths:
  /dashboard:
    get:
      summary: Dashboard Get
      tags: [Dashboard]
      description: |
        Get dashboard information
      parameters:
      - name: systemwide
        in: query
        description: Get system wide dashboard information
        type: boolean
      - name: allgroups
        in: query
        description: Get dashboard information for all groups for currently logged in user
        type: boolean
      - name: group
        in: query
        description: Get dashboard information for specific group
        type: number
      - name: grouptype
        in: query
        description: Which type of group to include
        type: string
        enum: ['Freegle', 'Reuse', 'Other']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /session:
    get:
      summary: Session Get
      tags: [Session]
      description: |
        Check if current user is logged in
      responses: 
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    post:
      summary: Session Login
      tags: [Session]
      description: |
        Log in as a user
      parameters:
      - name: fblogin
        in: query
        description: Log in via Facebook
        type: boolean
      - name: yahoologin
        in: query
        description: Log in via Yahoo
        type: boolean
      - name: email
        in: query
        description: For native login, email address
        type: string
      - name: password
        in: query
        description: For native login, password
        type: string
      - name: returnto
        in: query
        description: URL to return to for Login methods which respond with a redirect request
        type: string
      responses:
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Session Logout
      tags: [Session]
      description: |
        Log out current user
      responses: 
          "200": 
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /message:
    get:
      summary: Message Get
      tags: [Messages]
      description: |
        Retrieve message
      parameters:
      - name: id
        in: query
        description: ID of the message
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is messages_approved
        type: string
        enum: ['messages_approved', 'messages_pending', 'messages_spam']
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Message Delete
      tags: [Messages]
      description: |
        Delete message
      parameters:
      - name: id
        in: query
        description: ID of the message
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is messages_approved
        type: string
        enum: ['messages_approved', 'messages_pending', 'messages_spam']
      - name: reason
        in: query
        description: Why the message is being delete
        type: string
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /messages:
    get:
      summary: Messages Get
      tags: [Messages]
      description: |
        Retrieve messages
      parameters:
      - name: groupid
        in: query
        description: Groupid to query; default is all for current user
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is messages_approved
        type: string
        enum: ['messages_approved', 'messages_pending', 'messages_spam']
      - name: start
        in: query
        description: For paging results; message ID above which to return
        type: integer
      - name: limit
        in: query
        description: For paging results; max number of messages to return
        type: integer
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /correlate:
    post:
      summary: Messages Correlated
      tags: [Messages]
      description: |
        Correlate messages on server to determine any missing
      parameters:
      - name: groupid
        in: query
        description: Groupid to query; default is all for current user
        type: number
      - name: collection
        in: query
        description: Which collection the message is in; default is messages_approved
        type: string
        enum: ['messages_approved', 'messages_pending', 'messages_spam']
      - name: messages
        in: body
        description: Array of messages
        required: true,
        schema:
          $ref: '#/definitions/correlate'
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
  /supporters:
    get:
      summary: Supporters Get
      tags: [Supporters]
      description: |
        Retrieve list of supporters of this project
      responses:
          "200":
            description: "Successful response"
            schema:
              $ref: '#/definitions/Response'
          default:
            description: Unexpected error,
            schema:
              $ref: '#/definitions/Error'
definitions:
  Response:
    properties: 
      ret:
        type: integer
        description: Return text
      status:
        type: string
        description: Human-readable description
      call:
        type: string
        description: The name of the call made
      duration:
        type: number
        description: Elapsed time for this call (seconds)
      cpucost:
        type: number
        description: CPU time spent processing this call (seconds)
      dbwaittime:
        type: number
        description: Elapsed time spent on DB ops for this call (seconds)
      includetime:
        type: number
        description: Elapsed time spent including scripts (seconds)
      whoamitime:
        type: number
        description: Elapsed time spent working out who this session is for (seconds)
      session:
        type: string
        description: The ID of this session; will match the Set-Cookie, but can also be passed back in using the api_key parameter
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  correlate:
    type: array,
    items:
        $ref: '#/definitions/correlatemessage'
  correlatemessage:
    properties:
        email:
          type: string
          description: 'Email of sender'
        subject:
          type: string
          description: 'Subject of message'
        date:
          type: date-time
          description: 'Post date, i.e. Date: header field'